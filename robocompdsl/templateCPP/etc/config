CommonBehavior.Endpoints=tcp -p 1


[[[cog

import sys
sys.path.append('/opt/robocomp/python')

import cog
def A():
	cog.out('<@@<')
def Z():
	cog.out('>@@>')
def TAB():
	cog.out('<TABHERE>')
def SPACE(i=0):
	s = ''
	if i>0:
		s = str(i)
	cog.out('<S'+s+'>')

from parseCDSL import *
includeDirectories = theIDSLPaths.split('#')
component = CDSLParsing.fromFile(theCDSL, includeDirectories=includeDirectories)

storm = False

text = False
for ima in component['implements']:
	if type(ima) == str:
		im = ima
	else:
		im = ima[0]
	if communicationIsIce(ima):
		if text == False:
			cog.outl('# Endpoints for implemented interfaces')
			text = True
		cog.outl(im+".Endpoints=tcp -p 0")
if text:
	cog.out('\n\n')


text = False
for sb in component['subscribesTo']:
	if text == False:
		cog.outl('# Endpoints for subscriptions')
		text = True
	storm = True

	xx = sb
	while type(xx) != type(''):
		xx = xx[0]
	if communicationIsIce(sb):
		cog.outl(str(xx)+"Topic.Endpoints=tcp -p 0")

if text:
	cog.out('\n\n')


text = False
for namea, number in getNameNumber(component['requires']):
	if type(namea) == str:
		name = namea
	else:
		name = namea[0]
	if communicationIsIce(namea):
		if text == False:
			cog.outl('# Proxies for required interfaces')
			text = True
		port = 0
		if name == 'DifferentialRobot': port = 10004
		if name == 'Laser': port = 10003
		cog.outl(name + number + "Proxy = " + name.lower() + ":tcp -h localhost -p " + str(port))
if text:
	cog.out('\n\n')

#text = False
for namea in component['publishes']:
	storm = True
#	if text == False:
#		cog.outl('# Proxies for published topics')
#		text = True
#	cog.outl(pb + "Proxy = " + pb.lower() + ":tcp -h localhost -p 0")
#if text:
#	cog.out('\n')

if storm:
	cog.outl('# This property is used by the clients to connect to IceStorm.')
	cog.outl('TopicManager.Proxy=IceStorm/TopicManager:default -p 9999')

]]]
[[[end]]]

Ice.Warn.Connections=0
Ice.Trace.Network=0
Ice.Trace.Protocol=0
# Ice.ACM.Client=10
Ice.ACM.Client=0
# Ice.ACM.Server=10
Ice.ACM.Server=0
