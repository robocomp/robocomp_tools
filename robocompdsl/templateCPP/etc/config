CommonBehavior.Endpoints=tcp -p 1


[[[cog

import sys
sys.path.append('/opt/robocomp/python')

import cog
def A():
	cog.out('<@@<')
def Z():
	cog.out('>@@>')
def TAB():
	cog.out('<TABHERE>')
def SPACE(i=0):
	s = ''
	if i>0:
		s = str(i)
	cog.out('<S'+s+'>')

from parseCDSL import *
component = CDSLParsing.fromFile(theCDSL)

storm = False

text = False
for im in component['implements']:
	if text == False:
		cog.outl('# Endpoints for implemented interfaces')
		text = True
	cog.outl(im+".Endpoints=tcp -p 0")
if text:
	cog.out('\n\n')


text = False
for sb in component['subscribesTo']:
	if text == False:
		cog.outl('# Endpoints for subscriptions')
		text = True
	storm = True

	xx = sb
	while type(xx[0]) != type(''):
		xx = xx[0]
	if communicationIsIce(sb):
		cog.outl(str(xx)+"Topic.Endpoints=tcp -p 0")
	else:
		cog.outl(str(xx)+"Topic.Endpoints=whatever " + str(xx) + " for ROS")

if text:
	cog.out('\n\n')


text = False
for name, number in getNameNumber(component['requires']):
	if text == False:
		cog.outl('# Proxies for required interfaces')
		text = True
	cog.outl(name + number + "Proxy = " + name.lower() + ":tcp -h localhost -p 0")
if text:
	cog.out('\n\n')

#text = False
for pb in component['publishes']:
	storm = True
#	if text == False:
#		cog.outl('# Proxies for published topics')
#		text = True
#	cog.outl(pb + "Proxy = " + pb.lower() + ":tcp -h localhost -p 0")
#if text:
#	cog.out('\n')

if storm:
	cog.outl('# This property is used by the clients to connect to IceStorm.')
	cog.outl('TopicManager.Proxy=IceStorm/TopicManager:default -p 9999')

]]]
[[[end]]]

Ice.Warn.Connections=0
Ice.Trace.Network=0
Ice.Trace.Protocol=0
Ice.ACM.Client=10
Ice.ACM.Server=10


