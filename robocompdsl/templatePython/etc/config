[[[cog

import sys
sys.path.append('/opt/robocomp/python')

import cog
def A():
	cog.out('<@@<')
def Z():
	cog.out('>@@>')
def TAB():
	cog.out('<TABHERE>')
def SPACE(i=0):
	s = ''
	if i>0:
		s = str(i)
	cog.out('<S'+s+'>')
includeDirectories = theIDSLPaths.split('#')
from parseCDSL import *
component = CDSLParsing.fromFile(theCDSL, includeDirectories=includeDirectories)


text = False
for imp in component['implements']:
	if type(imp) == str:
		im = imp
	else:
		im = imp[0]
	if communicationIsIce(imp):
		if text == False:
			cog.outl('# Endpoints for implemented interfaces')
			text = True
		cog.outl(im+".Endpoints=tcp -p 0")
if text:
	cog.out('\n\n')


text = False
for sub in component['subscribesTo']:
	if type(sub) == str:
		sb = sub
	else:
		sb = sub[0]
	if communicationIsIce(sub):
		if text == False:
			cog.outl('# Endpoints for subscriptions')
			text = True
		cog.outl(sb+"Topic.Endpoints=tcp -p 0")
if text:
	cog.out('\n\n')


text = False
for req, num in getNameNumber(component['requires']):
	if type(req) == str:
		rq = req
	else:
		rq = req[0]
	if communicationIsIce(req):
		if text == False:
			cog.outl('# Proxies for required interfaces')
			text = True
		cog.outl(rq + num + "Proxy = " + rq.lower() + ":tcp -h localhost -p 0")
if text:
	cog.out('\n\n')


]]]
[[[end]]]

# This property is used by the clients to connect to IceStorm.
TopicManager.Proxy=IceStorm/TopicManager:default -p 9999


Ice.Warn.Connections=0
Ice.Trace.Network=0
Ice.Trace.Protocol=0
Ice.ACM.Client=10
Ice.ACM.Server=10


